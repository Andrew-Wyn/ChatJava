/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatclient1;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.*;
import java.util.*;
import java.io.*;
import javax.swing.*;

public class ChatFrame extends javax.swing.JFrame implements ActionListener{
    
    static final String HOST = "localhost";
    static final int PORT = 1337;
    static DataInputStream in;
    static DataOutputStream out;
    public static DefaultListModel modelList = new DefaultListModel();
    public static String nome = "";
    
    Socket s;
    
    /**
     * Creates new form ChatFrame
     */
    public ChatFrame() {
        initComponents();
        jTextField1.addActionListener(this);
    }
    
    public void initServer(){
        try{
            s = new Socket(HOST,PORT);
            new ClientThread(s).start();
            out = new DataOutputStream(new BufferedOutputStream(s.getOutputStream()));
            
        }catch(Exception e){
            System.out.println("EXCEPTION -> Errore durante la connessione con il SERVER!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>(modelList);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout(2, 0));

        jTextField1.setText("testo");
        jPanel1.add(jTextField1, java.awt.BorderLayout.PAGE_END);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jScrollPane2.setViewportView(jList1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChatFrame c = new ChatFrame();
                c.setVisible(true);
                c.initServer();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if ((e.getSource() instanceof JTextField) && ((JTextField) e.getSource() == jTextField1) &&
        ((jTextField1.getText() != "")))
        {            
            try{
                if(ChatFrame.modelList.getSize() == 0 || ChatFrame.jList1.getSelectedValue().toLowerCase().equals("tutti")){
                    out.writeBoolean(true);
                    out.writeUTF(jTextField1.getText());
                    out.flush();
                    jTextField1.setText("");
                } else {
                    out.writeBoolean(false);
                    out.writeUTF(ChatFrame.jList1.getSelectedValue().toLowerCase() + "-" + jTextField1.getText());
                    out.flush();
                    jTextField1.setText("");
                }
            } catch(IOException exc){}
        }
    }
}

class ClientThread extends Thread{
    Socket conn;
    
    DataInputStream in;
    
    public ClientThread(Socket s){
        conn=s;        
    }
    
    public void run(){
        try{
            in=new DataInputStream(new BufferedInputStream(conn.getInputStream()));
                        
            in.readBoolean();
            initList(in.readUTF());
            
            while(true){
                if(in.readBoolean())
                    ChatFrame.jTextArea1.append(in.readUTF());
                else {
                    updateList();
                }
            }
        }catch(Exception e){
            System.out.println("exception -> " + e.getMessage());
        }
    }
    
    private void updateList(){ // controllo un altra volta se devo aggiungere o togliere
        try{            
            if(in.readBoolean()){
                
                ChatFrame.modelList.addElement(in.readUTF().trim());
            } else {
                String toRemove = in.readUTF();
                for(int i=0; i<ChatFrame.modelList.getSize(); i++){
                    if(ChatFrame.modelList.elementAt(i).equals(toRemove)){
                        ChatFrame.modelList.removeElementAt(i);
                    }
                }
            }
        }catch(Exception e){
            
        }
    }
    
    private void initList(String s){
        System.out.println(s);
        String[] elements;
        elements=s.split("\n");
        
        for(String i : elements){
            ChatFrame.modelList.addElement(i);
        }
        ChatFrame.jList1.setSelectedIndex(0);
    }
}